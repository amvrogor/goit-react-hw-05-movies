{"version":3,"file":"static/js/736.f8c156d5.chunk.js","mappings":"uUAEaA,EAAW,gCACXC,EAAiB,iCACjBC,EAAa,mCAEnB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAA8BC,EAA9B,+BAAqC,EAArC,SACkBC,EAAAA,EAAAA,IAAA,UAClBL,EADkB,sCACoBE,EADpB,iBACuCE,IAFzD,cACCE,EADD,yBAIEA,EAASC,MAJX,mEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,4FAAwCL,EAAxC,+BAA+C,EAA/C,SACkBC,EAAAA,EAAAA,IAAA,UAClBL,EADkB,gCACcE,EADd,gCACgDE,EADhD,sCACkFK,IAFpG,cACCH,EADD,yBAIEA,EAASC,MAJX,mEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBN,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDW,EADC,oBACaT,EADb,oBADlB,cACCI,EADD,yBAIEA,EAASC,MAJX,kEAcA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,uFACkBN,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDW,EADC,4BACqBT,EADrB,oBADlB,cACCI,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA6BF,GAA7B,uFACkBN,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDW,EADC,4BACqBT,EADrB,oBADlB,cACCI,EADD,yBAIEA,EAASC,MAJX,kE,qICvCMO,EAAOC,EAAAA,GAAAA,GAAH,6HAQJC,EAAWD,EAAAA,GAAAA,GAAH,yCAIRE,EAAQF,EAAAA,GAAAA,IAAH,4DAKLG,EAAOH,EAAAA,GAAAA,EAAH,4C,SCsBjB,EApCa,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAWO,GACRM,MAAK,SAAAlB,GACJgB,EAAQhB,EAAKe,KACd,IACAI,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACR,KAGF,SAACL,EAAD,UACmB,IAAhBQ,EAAKQ,OACFR,EAAKS,KAAI,SAAAC,GAAK,OACZ,UAAChB,EAAD,YACE,SAACC,EAAD,CACEgB,IACED,EAAME,aAAN,UACOjC,EAAAA,IADP,OACwB+B,EAAME,cAC1B,iEAENC,IAAKH,EAAMI,QAEb,SAAClB,EAAD,UAAOc,EAAMI,QACb,UAAClB,EAAD,yBAAkBc,EAAMK,UAAxB,SAVaL,EAAMrB,GADT,IAcd,yCAGT,C","sources":["Services/getApi.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/w500';\nexport const GLOBAL_KEY = 'df88ba4f44a5ed712dd0a71f1b3d877c';\n\nexport async function getTrendingAPI(page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${GLOBAL_KEY}&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovieAPI(query, page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${GLOBAL_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  );\n  return response.data;\n}\n\nexport async function getMovieIdAPI(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getGenresAPI() {\n  const response = await axios.get(\n    `${BASE_URL}genre/movie/list?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getCastAPI(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getReviewsAPI(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  width: 200px;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 200px;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastAPI, IMAGE_BASE_URL } from 'Services/getApi';\nimport { Image, List, ListItem, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getCastAPI(movieId)\n      .then(data => {\n        setCast(data.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return (\n    <List>\n      {cast.length !== 0\n        ? cast.map(actor => (\n            <ListItem key={actor.id}>\n              <Image\n                src={\n                  actor.profile_path\n                    ? `${IMAGE_BASE_URL}${actor.profile_path}`\n                    : 'https://dummyimage.com/200x300/e0e0e0/ffffff.jpg&text=No+photo'\n                }\n                alt={actor.name}\n              />\n              <Text>{actor.name}</Text>\n              <Text>Character: {actor.character} </Text>\n            </ListItem>\n          ))\n        : \"We don't have the cast for this movie\"}\n    </List>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","IMAGE_BASE_URL","GLOBAL_KEY","getTrendingAPI","page","axios","response","data","getSearchMovieAPI","query","getMovieIdAPI","id","getCastAPI","getReviewsAPI","List","styled","ListItem","Image","Text","movieId","useParams","useState","cast","setCast","useEffect","then","catch","error","console","log","length","map","actor","src","profile_path","alt","name","character"],"sourceRoot":""}