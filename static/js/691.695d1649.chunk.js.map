{"version":3,"file":"static/js/691.695d1649.chunk.js","mappings":"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","sources":["Services/getApi.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/w500';\nexport const GLOBAL_KEY = 'df88ba4f44a5ed712dd0a71f1b3d877c';\n\nexport async function getTrendingAPI(page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${GLOBAL_KEY}&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovieAPI(query, page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${GLOBAL_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  );\n  return response.data;\n}\n\nexport async function getMovieIdAPI(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getGenresAPI() {\n  const response = await axios.get(\n    `${BASE_URL}genre/movie/list?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getCastAPI(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getReviewsAPI(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const SearchForm = styled.form`\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid #e7ecf2;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: #e7ecf2;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nexport const LinkButton = styled(Link)`\n  width: 600px;\n  display: block;\n  padding: 5px;\n  margin-right: auto;\n  color: #3f3f3f;\n  text-decoration: none;\n  border: 1px solid gray;\n  border-radius: 5px;\n  :hover {\n    opacity: 0.7;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport {\n  LinkButton,\n  List,\n  ListItem,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './Movies.styled';\nimport { BsSearch } from 'react-icons/bs';\nimport { getSearchMovieAPI } from 'Services/getApi';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n    getSearchMovieAPI(query, page)\n      .then(data => {\n        if (data.results.length === 0) {\n          setMovies([]);\n          return toast.error(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        } else\n          page === 1\n            ? setMovies(data.results)\n            : setMovies(prev => [...prev, ...data.results]);\n        setTotalPages(data.total_pages);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [query, page]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const queryValue = form.elements.query.value;\n    if (!queryValue.trim()) {\n      e.target.reset();\n      return toast.error('Please enter search query');\n    }\n    setSearchParams({ query: queryValue });\n    form.reset();\n  };\n\n  const loadMore = () => {\n    if (page < totalPages)\n      setTimeout(() => {\n        setPage(prev => prev + 1);\n      }, 500);\n    return;\n  };\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <BsSearch />\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          name=\"query\"\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      </SearchForm>\n\n      <List>\n        {movies.length !== 0 && (\n          <InfiniteScroll\n            dataLength={movies.length}\n            next={loadMore}\n            hasMore={totalPages <= 1 ? false : true}\n            loader={<p>Loading...</p>}\n          >\n            {movies.map(movie => (\n              <ListItem key={movie.id}>\n                <LinkButton to={`${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </LinkButton>\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        )}\n      </List>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","IMAGE_BASE_URL","GLOBAL_KEY","getTrendingAPI","page","axios","response","data","getSearchMovieAPI","query","getMovieIdAPI","id","getCastAPI","getReviewsAPI","SearchForm","styled","SearchFormButton","SearchFormButtonLabel","SearchFormInput","List","ListItem","LinkButton","Link","location","useLocation","useState","movies","setMovies","setPage","totalPages","setTotalPages","useSearchParams","searchParams","setSearchParams","get","useEffect","then","results","length","toast","prev","total_pages","catch","error","console","log","onSubmit","e","preventDefault","form","currentTarget","queryValue","elements","value","trim","target","reset","type","name","autocomplete","autoFocus","placeholder","dataLength","next","setTimeout","hasMore","loader","map","movie","to","state","from","title"],"sourceRoot":""}