{"version":3,"file":"static/js/207.038be250.chunk.js","mappings":"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","sources":["components/Services/GetApi.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","components/Services/GetGenres.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/w500';\nexport const GLOBAL_KEY = 'df88ba4f44a5ed712dd0a71f1b3d877c';\n\nexport async function getTrendingAPI(page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${GLOBAL_KEY}&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovieAPI(query, page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${GLOBAL_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  );\n  return response.data;\n}\n\nexport async function getMovieIdAPI(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getGenresAPI() {\n  const response = await axios.get(\n    `${BASE_URL}genre/movie/list?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getCastAPI(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getReviewsAPI(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${GLOBAL_KEY}&language=en-US`\n  );\n  return response.data;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkButton = styled(Link)`\n  display: block;\n  padding: 5px;\n  margin-right: auto;\n  color: #3f3f3f;\n  text-decoration: none;\n  border: 1px solid gray;\n  border-radius: 5px;\n  :hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const Movie = styled.div`\n  display: flex;\n  margin-top: 10px;\n  margin-right: auto;\n`;\n\nexport const Poster = styled.div`\n  width: 400px;\n`;\nexport const Image = styled.img`\n  display: block;\n  width: 400px;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const Info = styled.div`\n  padding: 0 15px;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 30px;\n`;\n\nexport const InfoTitle = styled.h2`\n  font-size: 20px;\n`;\n\nexport const InfoText = styled.p`\n  font-size: 16px;\n`;\n\nexport const AddInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 10px;\n  padding: 0 15px 15px 15px;\n  border: 1px solid #3f3f3f;\n  border-width: 1px 0 1px 0;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li``;\n","import { useState, useEffect, Suspense, useRef } from 'react';\nimport { getMovieIdAPI } from 'components/Services/GetApi';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { GetGenres } from 'components/Services/GetGenres';\nimport { IMAGE_BASE_URL } from 'components/Services/GetApi';\nimport {\n  Image,\n  Info,\n  InfoText,\n  InfoTitle,\n  List,\n  ListItem,\n  Movie,\n  MovieTitle,\n  Poster,\n  AddInfo,\n  LinkButton,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const [poster, setPoster] = useState('');\n  const [title, setTitle] = useState('');\n  const [release, setRelease] = useState('');\n  const [voteAverage, setVoteAverage] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState('');\n\n  GetGenres();\n  const savedGenres = JSON.parse(localStorage.getItem('savedGenres'));\n\n  useEffect(() => {\n    getMovieIdAPI(movieId)\n      .then(data => {\n        console.log(data.poster_path);\n        setPoster(\n          data.poster_path\n            ? `${IMAGE_BASE_URL}${data.poster_path}`\n            : 'https://dummyimage.com/400x600/e0e0e0/ffffff.jpg&text=No+poster'\n        );\n        setTitle(data.title);\n        setRelease(data.release_date);\n        setVoteAverage(data.vote_average);\n        setOverview(data.overview);\n        setGenres(\n          `${\n            data.genres.length !== 0\n              ? data.genres.map(genre => savedGenres[genre.id]).join(', ')\n              : ''\n          }`\n        );\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId, savedGenres]);\n\n  return (\n    <>\n      <LinkButton to={backLinkLocationRef.current}>Go back</LinkButton>\n      <Movie>\n        <Poster>\n          <Image src={poster} alt={title} />\n        </Poster>\n        <Info>\n          <MovieTitle>\n            {title} {release ? `(${release.slice(0, 4)})` : ''}\n          </MovieTitle>\n          <InfoText>User score: {voteAverage}</InfoText>\n          <InfoTitle>Overview</InfoTitle>\n          {overview ? (\n            <InfoText>{overview}</InfoText>\n          ) : (\n            \"We don't have the overview for this movie\"\n          )}\n          <InfoTitle>Genres</InfoTitle>\n          {genres ? (\n            <InfoText>{genres}</InfoText>\n          ) : (\n            \"We don't know genres of this movie\"\n          )}\n        </Info>\n      </Movie>\n      <AddInfo>\n        <InfoTitle>Additional information</InfoTitle>\n        <List>\n          <ListItem>\n            <LinkButton to=\"cast\">Cast</LinkButton>\n          </ListItem>\n          <ListItem>\n            <LinkButton to=\"reviews\">Reviews</LinkButton>\n          </ListItem>\n        </List>\n      </AddInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useState, useEffect } from 'react';\nimport { getGenresAPI } from './GetApi';\n\nexport const GetGenres = () => {\n  const getInitialGenres = () => {\n    const savedGenres = localStorage.getItem('savedGenres');\n    if (savedGenres !== null) {\n      const parsedGenres = JSON.parse(savedGenres);\n      return parsedGenres;\n    }\n    return {};\n  };\n\n  const [genres, setGenres] = useState(getInitialGenres);\n\n  useEffect(() => {\n    localStorage.setItem('savedGenres', JSON.stringify(genres));\n  }, [genres]);\n\n  if (Object.entries(genres).length !== 0) {\n    return;\n  } else\n    getGenresAPI()\n      .then(data =>\n        setGenres(\n          Object.fromEntries(data.genres.map(genre => [genre.id, genre.name]))\n        )\n      )\n      .catch(error => {\n        console.log(error);\n      });\n};\n"],"names":["BASE_URL","IMAGE_BASE_URL","GLOBAL_KEY","getTrendingAPI","page","axios","response","data","getSearchMovieAPI","query","getMovieIdAPI","id","getGenresAPI","getCastAPI","getReviewsAPI","LinkButton","styled","Link","Movie","Poster","Image","Info","MovieTitle","InfoTitle","InfoText","AddInfo","List","ListItem","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","poster","setPoster","title","setTitle","release","setRelease","voteAverage","setVoteAverage","overview","setOverview","genres","setGenres","savedGenres","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","Object","entries","length","then","fromEntries","map","genre","name","catch","error","console","log","GetGenres","poster_path","release_date","vote_average","join","to","current","src","alt","slice","Suspense","fallback"],"sourceRoot":""}